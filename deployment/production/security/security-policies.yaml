# Production Security Policies
# Banking-Grade Security for Legacy B2BaaS Platform

# Network Security Policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: legacy-baas-network-policy
  namespace: legacy-baas-production
spec:
  podSelector:
    matchLabels:
      app: legacy-baas
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS outbound
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
---
# Pod Security Policy
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: legacy-baas-psp
  namespace: legacy-baas-production
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
# Certificate Management
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: security@legacybaas.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
---
# TLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: legacy-baas-tls
  namespace: legacy-baas-production
spec:
  secretName: legacy-baas-tls-secret
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - api.legacybaas.com
  - app.legacybaas.com
---
# RBAC for Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: legacy-baas-service-account
  namespace: legacy-baas-production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: legacy-baas-production
  name: legacy-baas-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: legacy-baas-role-binding
  namespace: legacy-baas-production
subjects:
- kind: ServiceAccount
  name: legacy-baas-service-account
  namespace: legacy-baas-production
roleRef:
  kind: Role
  name: legacy-baas-role
  apiGroup: rbac.authorization.k8s.io